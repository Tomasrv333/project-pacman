"""
logic/map.py — RandomPac v3.0
Mapa clásico tipo Pac-Man con puntos prellenados.
Leyenda:
1 = Muro
2 = Punto normal (dot)
3 = Power dot (energizante)
4 = Puerta de casa de fantasmas
0 = Espacio vacío (sin punto)
"""

def generate_level():
    # Diseño simétrico basado en el clásico Pac-Man
    level = [
        "1111111111111111111111111111",
        "1322222222222112222222222221",
        "1211112111112112111112111121",
        "1211112111112112111112111121",
        "1211112111112112111112111121",
        "1222222222222222222222222221",
        "1211112112111111112112111121",
        "1211112112111111112112111131",
        "1222222112222112222112222221",
        "1111112111112112111112111111",
        "1111112111112112111112111111",
        "1111112112222222222112111111",
        "1111112112111441112112111111",
        "1111112112100000012112111111",
        "2222222222100000012222222222",
        "1111112112100000012112111111",
        "1111112112111111112112111111",
        "1111112112222222222112111111",
        "1111112112111111112112111111",
        "1111112112111111112112111111",
        "1222222222222112222222222221",
        "1211112111112112111112111121",
        "1211112111112112111112111121",
        "1322112222222222222222112221",
        "1112112112111111112112112111",
        "1112112112111111112112112111",
        "1222222112222112222112222221",
        "1211111111112112111111111121",
        "1211111111112112111111111121",
        "1222222222222222222222222231",
        "1111111111111111111111111111",
    ]

    grid = [[int(ch) for ch in row] for row in level]
    return grid


def is_wall(grid, c, r):
    return grid[r][c] == 1


def is_door(grid, c, r):
    return grid[r][c] == 4


def eat_dot(grid, c, r):
    """Elimina el punto o power dot cuando Pac-Man lo come."""
    if grid[r][c] in (2, 3):
        grid[r][c] = 0
        return True
    return False
